<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!--  Spring Security Context mode declaration -->
	<beans:bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <beans:property name="targetClass">
	    	<beans:value>org.springframework.security.core.context.SecurityContextHolder</beans:value>
	    </beans:property>
	    <beans:property name="targetMethod">
	    	<beans:value>setStrategyName</beans:value>
	    </beans:property>
	    <beans:property name="arguments">
	        <beans:list>
	            <beans:value>MODE_INHERITABLETHREADLOCAL</beans:value>
	        </beans:list>
	    </beans:property>
	</beans:bean>

	<!-- authentication manager and password hashing -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="rememberMeAuthenticationProvider" />
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userService" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" />
		<beans:property name="preAuthenticationChecks" ref="preAuthenticationChecks" />
	</beans:bean>

	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />
	
	<beans:bean id="preAuthenticationChecks" class="com.phroogal.core.domain.security.LoginPreAuthenticationCheck" />

	<beans:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<beans:property name="key" value="${sec.rememberme.key}" />
		<beans:property name="userDetailsService" ref="userService" />
		<beans:property name="tokenRepository" ref="persistentTokenRepository" />
	</beans:bean>
	
	<beans:bean id="autologinRememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<beans:property name="alwaysRemember" value="true" />
		<beans:property name="key" value="${sec.rememberme.key}" />
		<beans:property name="userDetailsService" ref="userService" />
		<beans:property name="tokenRepository" ref="persistentTokenRepository" />
	</beans:bean>

	<beans:bean id="persistentTokenRepository" class="com.phroogal.core.repository.impl.MongoPersistentTokenRepositoryImpl">
		<beans:constructor-arg ref="rememberMeTokenRepository" />
	</beans:bean>

	<beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<beans:property name="key" value="${sec.rememberme.key}" />
	</beans:bean>

	<beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg index="0" value="/signin" />
		<beans:constructor-arg index="1">
			<beans:list>
				<beans:ref bean="rememberMeServices" />
				<beans:bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/logout" />
	</beans:bean>
	
</beans:beans>

